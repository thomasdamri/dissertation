-# frozen_string_literal: true
= simple_form_for(@uni_module) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  %h5 Hover over input boxes to see for a more detailed description
  .form-inputs
    %h2 Module Information
    .tt{"data-toggle": "tooltip", "data-placement": "top", "title": "Unique module code (eg. COM1001)"}
      = f.input :code, label: 'Module Code'
    .tt{"data-toggle": "tooltip", "data-placement": "top", "title": "Unique name for the module"}
      = f.input :name, label: 'Module Name'
    .tt{"data-toggle": "tooltip", "data-placement": "top", "title": "Set this to any day in the first week where students need to start filling in worklogs"}
      = f.input :start_date, start_year: Date.today.year, label: "First worklog week"
    .tt{"data-toggle": "tooltip", "data-placement": "top", "title": "Set this to any day in the final week that students need to fill in worklogs"}
      = f.input :end_date, start_year: Date.today.year, label: "Final worklog week"

    %h2 Staff Members
    %p Add additional staff members who are associated with the module.
    = f.simple_fields_for :staff_modules do |sm|
      = render 'staff_fields', f: sm

    = link_to_add_fields 'Add Staff Member', f, :staff_modules, 'staff_fields'

  .form-actions
    = f.button :submit, "#{@btn_text} Module", class: 'btn btn-lg btn-primary'
